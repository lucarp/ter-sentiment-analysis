library("ARI")
install.packages("ARI", dependencies = TRUE)
install.packages("ari", dependencies = TRUE)
lambdas <- c("10000.0", "1000.0", "100.0", "10.0", "1.0", "0.1", "0.01", "0.001", "0.0001", "1e-05", "0.0")
lambdas <- rev(lambdas)
cos_nmi <- c()
cos_ari <- c()
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
c(4.09, 3.73, 3.48, 3,33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
kl_res <- c(4.09, 3.73, 3.48, 3,33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
plot(kl_res)
kl_res <- c(4.09, 3.73, 3.48, 3.33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
plot(kl_res)
plot(kl_res, c(1:length(kl_res)))
perpl_v <- c(1:25) * 5
perl_v
perpl_v
perpl_v <- c(1:25 * 5, 5)
perpl_v <- c(1:25 * 5, 1:9 * 125)
perpl_v
perpl_v <- c(1:25 * 5, 1:9 * 25 + 100)
perpl_v
kl_res <- c(4.09, 3.73, 3.48, 3.33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
perpl_v <- c(1:25 * 5, 1:9 * 25 + 125)
perpl_v
kl_res <- c(4.09, 3.73, 3.48, 3.33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
perpl_v <- c(1:25 * 5, 1:9 * 25 + 125)
plot(kl_res, )
plot(kl_res, perl_v)
plot(kl_res, perpl_v)
kl_res <- c(4.09, 3.73, 3.48, 3.33, 3.18, 3.08, 2.99, 2.91, 2.83, 2.78, 2.73, 2.68, 2.62, 2.56, 2.54, 2.51, 2.47, 2.43, 2.39, 2.36, 2.21, 2.14, 2.03, 1.97, 1.88, 1.83, 1.77, 1.72, 1.67, 1.64)
perpl_v <- c(1:25 * 5, 1:9 * 25 + 125)
plot(kl_res, perpl_v)
length(x)
length(kl_res)
length(perpl_v)
perpl_v
perpl_v <- c(1:20 * 5, 1:9 * 25 + 125)
perpl_v
perpl_v <- c(1:20 * 5, 1:9 * 25 + 100)
plot(kl_res, perpl_v)
length(kl_res)
length(perpl_v)
perpl_v
perpl_v <- c(1:20 * 5, 1:10 * 25 + 100)
plot(kl_res, perpl_v)
plot(perpl_v, kl_res)
?plot
plot(perpl_v, kl_res, type = "b")
plot(perpl_v, kl_res, type = "b", xlab = "perplexity", ylab = "KL divergence")
setwd("/media/matthieu/Data/Matthieu/##Etude/#M1/S2/DataScience/Fashion-MNIST")
setwd("/media/matthieu/Data/Matthieu/##Etude/#M1/S2/TER/ter-sentiment-analysis")
library(aricode)
library(R.matlab)
library(skmeans)
library("FactoMineR")
library(NMF)
normalize <- function(x) {x / sqrt(rowSums(x^2))}
normalizeByCol <- function(df) { t( normalize( t(df) ) )}
# ------- Dataset loading -------
#X <- readMat("mat_files/output_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_30.csv_bow.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_50.csv_tf-idf-l2.mat")
X <- readMat("mat_files/output_not_original_10.csv_tf-idf-l2.mat")
X <- readMat("mat_files/output_not_original_most_1000.csv_tf-idf-l2.mat")
df <- X$X
dim(df)
mat_df <- as.matrix(df)
mat_df <- normalize(mat_df)
dim(mat_df)
label <- read.csv("mat_files/dataset_LABEL.csv", header = FALSE)
k <- 5
labelK <- apply(label, MARGIN = 1, FUN=function(x) max(1, ceiling(x*k))) # true label (1 to k)
# ------- Spherical K-means -------
res2 <- skmeans(mat_df, k)
res2$cluster
layout(matrix(1:2))
plot(labelK, xlab = "Documents", ylab = "Cluster")
plot(res2$cluster, xlab = "Documents", ylab = "Cluster")
# ------- LDA -------
res_lda <- read.csv("latent_dirichlet_allocation.csv", header = TRUE)
# ------- LDA -------
res_lda <- read.csv("latent_dirichlet_allocation_res.csv", header = TRUE)
# print results
res_lda <- t( normalize( t(res_lda) ) )
label_res <- apply(res_lda, MARGIN = 1, FUN=which.max)
layout(matrix(1:2))
plot(labelK)
plot(label_res)
# ---------- Autoencoder results ----------
k0 <- read.csv("result_autoencoder/autoencoder_0_code.csv", row.names = 1)
k0_ind <- read.csv("result_autoencoder/autoencoder_0_ind.csv", row.names = 1)
k1 <- read.csv("result_autoencoder/autoencoder_1_code.csv", row.names = 1)
k1_ind <- read.csv("result_autoencoder/autoencoder_1_ind.csv", row.names = 1)
k2 <- read.csv("result_autoencoder/autoencoder_2_code.csv", row.names = 1)
k2_ind <- read.csv("result_autoencoder/autoencoder_2_ind.csv", row.names = 1)
k3 <- read.csv("result_autoencoder/autoencoder_3_code.csv", row.names = 1)
k3_ind <- read.csv("result_autoencoder/autoencoder_3_ind.csv", row.names = 1)
k4 <- read.csv("result_autoencoder/autoencoder_4_code.csv", row.names = 1)
k4_ind <- read.csv("result_autoencoder/autoencoder_4_ind.csv", row.names = 1)
res_ae = rbind(k0, k1, k2, k3, k4)
k_ind = rbind(k0_ind, k1_ind, k2_ind, k3_ind, k4_ind)
res_ae = res_ae[order(k_ind),]
label_res_ae <- apply(res_ae, MARGIN = 1, FUN=which.max)
layout(matrix(1:2))
plot(labelK)
plot(label_res_ae)
# ----------------------------------------
res_new <- read.csv(dataset/output_not_original_10_doc_sentiment.csv", header = TRUE)
# ----------------------------------------
res_new <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", header = TRUE)
# print results
res_new <- t( normalize( t(res_new) ) )
# ----------------------------------------
res_new <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", header = TRUE)
res_new
# ----------------------------------------
res_new <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", header = TRUE, col = 1)
S <- read.csv("dataset/output_not_original_10_term_sentiment.csv")[,3:5]
S
?read.csv
# ----------------------------------------
res_new <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", header = TRUE, row.names = 1)
res_new
# ----------------------------------------
res_new <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", row.names = 1)
res_new
X <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", row.names = 1)
df <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", row.names = 1)
dim(df)
mat_df <- as.matrix(df)
mat_df <- normalize(mat_df)
dim(mat_df)
label <- read.csv("mat_files/dataset_LABEL.csv", header = FALSE)
k <- 5
labelK <- apply(label, MARGIN = 1, FUN=function(x) max(1, ceiling(x*k))) # true label (1 to k)
# ------- Spherical K-means -------
res2 <- skmeans(mat_df, k)
res2$cluster
layout(matrix(1:2))
plot(labelK, xlab = "Documents", ylab = "Cluster")
plot(res2$cluster, xlab = "Documents", ylab = "Cluster")
doc_sent_process <- function(x){
print(x)
}
# ----------------------------------------
df <- read.csv("dataset/output_not_original_10_doc_sentiment.csv", row.names = 1)
mat_df <- as.matrix(df)
# ------- Spherical K-means -------
res2 <- skmeans(mat_df, k)
res2$cluster
layout(matrix(1:2))
plot(labelK, xlab = "Documents", ylab = "Cluster")
plot(res2$cluster, xlab = "Documents", ylab = "Cluster")
apply(df, MARGIN = 1, FUN = doc_sent_process)
doc_sent_process <- function(x){
0
}
apply(df, MARGIN = 1, FUN = doc_sent_process)
df
temp <- apply(df, MARGIN = 1, FUN = doc_sent_process)
temp
dim(temp)
length(temp)
doc_sent_process <- function(x){
x[1]
}
temp <- apply(df, MARGIN = 1, FUN = doc_sent_process)
temp
doc_sent_process <- function(x){
x[1] - x[2]
}
temp <- apply(df, MARGIN = 1, FUN = doc_sent_process)
temp
layout(matrix(1:2))
plot(labelK)
plot(temp)
doc_sent_process <- function(x){
x[1]*10 - x[2]*10 + x[3]
}
temp <- apply(df, MARGIN = 1, FUN = doc_sent_process)
layout(matrix(1:2))
plot(labelK)
plot(temp)
doc_sent_process <- function(x){
x[1]
}
temp <- apply(df, MARGIN = 1, FUN = doc_sent_process)
layout(matrix(1:2))
plot(labelK)
plot(temp)
setwd("/media/matthieu/Data/Matthieu/##Etude/#M1/S2/TER/ter-sentiment-analysis")
library(aricode)
library(R.matlab)
library(skmeans)
library("FactoMineR")
library(NMF)
normalize <- function(x) {x / sqrt(rowSums(x^2))}
normalizeByCol <- function(df) { t( normalize( t(df) ) )}
# ------- Dataset loading -------
#X <- readMat("mat_files/output_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_30.csv_bow.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_50.csv_tf-idf-l2.mat")
X <- readMat("mat_files/output_not_original_10.csv_tf-idf-l2.mat")
df <- X$X
dim(df)
mat_df <- as.matrix(df)
mat_df <- normalize(mat_df)
dim(mat_df)
label <- read.csv("mat_files/dataset_LABEL.csv", header = FALSE)
k <- 5
labelK <- apply(label, MARGIN = 1, FUN=function(x) max(1, ceiling(x*k))) # true label (1 to k)
# ---
S <- read.csv("dataset/output_not_original_10_term_sentiment.csv")[,3:5]
S <- as.matrix(head(S, -1))
S
max(1, 2)
M <- apply(S, MARGIN = 1, FUN = max)
M
sent_process <- function(x){ x[1] - x[2] }
M <- apply(S, MARGIN = 1, FUN = sent_process)
M
diag(M)
M <- diag(M)
M <- apply(S, MARGIN = 1, FUN = sent_process)
M <- apply(S, MARGIN = 1, FUN = sent_process)
M <- diag(M)
dim(M)
mat_df <- mat_df %*% M
M[1][1]
dim(M)
M <- apply(S, MARGIN = 1, FUN = sent_process)
dim(M)
M
length(M)
temp <- c(1:10)
temp
diag(temp)
mat_df <- normalize(mat_df)
dim(mat_df)
# ------- Spherical K-means -------
res2 <- skmeans(mat_df, k)
sent_process <- function(x){ (x[1] - x[2]) * 10 + x[3] }
# ------- Dataset loading -------
#X <- readMat("mat_files/output_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_30.csv_bow.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf.mat")
#X <- readMat("mat_files/output_not_original_30.csv_tf-idf-l2.mat")
#X <- readMat("mat_files/output_not_original_50.csv_tf-idf-l2.mat")
X <- readMat("mat_files/output_not_original_10.csv_tf-idf-l2.mat")
df <- X$X
dim(df)
mat_df <- as.matrix(df)
mat_df <- normalize(mat_df)
dim(mat_df)
label <- read.csv("mat_files/dataset_LABEL.csv", header = FALSE)
k <- 5
labelK <- apply(label, MARGIN = 1, FUN=function(x) max(1, ceiling(x*k))) # true label (1 to k)
# ---
S <- read.csv("dataset/output_not_original_10_term_sentiment.csv")[,3:5]
S <- as.matrix(head(S, -1))
S <- normalize(S)
dim(S)
M <- apply(S, MARGIN = 1, FUN = sent_process)
M <- diag(M)
mat_df <- mat_df %*% M
mat_df <- normalize(mat_df)
dim(mat_df)
# ------- Spherical K-means -------
res2 <- skmeans(mat_df, k)
layout(matrix(1:2))
plot(labelK, xlab = "Documents", ylab = "Cluster")
plot(res2$cluster, xlab = "Documents", ylab = "Cluster")
